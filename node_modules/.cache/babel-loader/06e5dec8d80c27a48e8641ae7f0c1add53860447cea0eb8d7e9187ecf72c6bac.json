{"ast":null,"code":"var _jsxFileName = \"/Users/thoeurnratha/Documents/m1/web-development/ecommerce-store/src/cart/Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport './Payment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = ({\n  totalAmount\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) return;\n    setLoading(true);\n    setErrorMessage(null);\n    setSuccessMessage(null);\n    const cardElement = elements.getElement(CardElement);\n\n    // Create payment method\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n    setLoading(false);\n    if (error) {\n      setErrorMessage(error.message);\n    } else {\n      setSuccessMessage('Payment was successful!');\n      console.log('Payment Method:', paymentMethod);\n      console.log('Total Amount:', totalAmount);\n      // TODO: Send paymentMethod.id and totalAmount to your server for further processing.\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"payment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Total Amount: $\", totalAmount.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n        className: \"card-element\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-3\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 34\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success mt-3\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !stripe || loading,\n        className: \"btn btn-primary mt-4\",\n        children: loading ? 'Processing...' : 'Pay Now'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Payment, \"vHWIAGymKkkF3vlOB529Q/AzArs=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","Payment","totalAmount","_s","stripe","elements","loading","setLoading","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleSubmit","event","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","message","console","log","className","children","onSubmit","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["/Users/thoeurnratha/Documents/m1/web-development/ecommerce-store/src/cart/Payment.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport './Payment.css';\n\nconst Payment = ({ totalAmount }) => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [successMessage, setSuccessMessage] = useState(null);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (!stripe || !elements) return;\n\n        setLoading(true);\n        setErrorMessage(null);\n        setSuccessMessage(null);\n\n        const cardElement = elements.getElement(CardElement);\n\n        // Create payment method\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: 'card',\n            card: cardElement,\n        });\n\n        setLoading(false);\n\n        if (error) {\n            setErrorMessage(error.message);\n        } else {\n            setSuccessMessage('Payment was successful!');\n            console.log('Payment Method:', paymentMethod);\n            console.log('Total Amount:', totalAmount);\n            // TODO: Send paymentMethod.id and totalAmount to your server for further processing.\n        }\n    };\n\n    return (\n        <div className=\"payment-container\">\n            <form onSubmit={handleSubmit} className=\"payment-form\">\n                <h4>Total Amount: ${totalAmount.toFixed(2)}</h4>\n                <CardElement className=\"card-element\" />\n\n                {errorMessage && <div className=\"alert alert-danger mt-3\">{errorMessage}</div>}\n                {successMessage && <div className=\"alert alert-success mt-3\">{successMessage}</div>}\n\n                <button\n                    type=\"submit\"\n                    disabled={!stripe || loading}\n                    className=\"btn btn-primary mt-4\"\n                >\n                    {loading ? 'Processing...' : 'Pay Now'}\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default Payment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}